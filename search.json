[{"path":"https://jonasmoss.github.io/quadagree/articles/using_fleissci.html","id":"aggregated-data","dir":"Articles","previous_headings":"","what":"Aggregated data","title":"Using the quadagree package","text":"Data aggregated form looks different, row aggregating number ratings category. following example Fleiss (1971). dataset categories Provided understand depression 1, personality disorder 2, , can calculate inference quadratically weighted Fleiss kappa (Conger’s kappa) data form. results using aggregated functions agree irrCAC, despite underlying methodology different. main contributions package comes aggregated data ability calculate new variant Brennan-Prediger coefficient, support values telling program value attach rating, support transforms. calculations also marginally faster, \\(2\\) times, unlikely impact. Note inference missing data aggregated form supported. Data aggregated form can, however, bootstrapped, transforms none, fisher arcsin supported. type options used long form make sense context.","code":"knitr::kable(head(dat.fleiss1971)) colnames(dat.fleiss1971) #> [1] \"depression\"           \"personality disorder\" \"schizophrenia\"        #> [4] \"neurosis\"             \"other\" fleissci_aggr(dat.fleiss1971) #> Call: fleissci_aggr(x = dat.fleiss1971) #>  #> 95% confidence interval (n = 30). #>      0.025      0.975  #> 0.05668483 0.51145967  #>  #> Sample estimates. #> kappa.xtx        sd  #> 0.2840722 0.5987194"},{"path":"https://jonasmoss.github.io/quadagree/articles/web_only/benchmarks_aggr.html","id":"benchmarks","dir":"Articles > Web_only","previous_headings":"","what":"Benchmarks","title":"Short benchmark of Fleiss' kappa and Brennan-Prediger","text":"run three benchmarks various sizes using microbenchmark package. start dat.fleiss1971, contains \\(n=30\\) rows. quadagree roughly twice fast. Let’s see happens \\(n=300\\). run time almost methods \\(n=30\\), suggesting substantial overhead methods. Let’s check \\(n=3000\\). appears bpci_aggr pulling ahead irrCAC::bp.coeff.dist. Let’s finish larger number categories. quadagree substantially faster data many categories items rated.","code":"x <- dat.fleiss1971 irr_bp <- \\(x) irrCAC::bp.coeff.dist(x, weights = \"quadratic\") irr_fleiss <- \\(x) irrCAC::fleiss.kappa.dist(x, weights = \"quadratic\") microbenchmark::microbenchmark(   irr_bp(x),   bpci_aggr(x),   irr_fleiss(x),   fleissci_aggr(x),   times = 1000 ) ## Unit: microseconds ##              expr   min     lq     mean median     uq     max neval ##         irr_bp(x) 706.9 736.50 788.2840 746.70 762.80  4061.3  1000 ##      bpci_aggr(x) 343.1 363.20 392.6745 399.70 410.30  3627.9  1000 ##     irr_fleiss(x) 731.6 756.85 835.9941 769.85 788.15 16578.5  1000 ##  fleissci_aggr(x) 333.6 354.60 386.9121 382.80 402.45  3571.8  1000 x <- dat.fleiss1971 x <- rbind(x, x, x, x, x, x, x, x, x, x) microbenchmark::microbenchmark(   irr_bp(x),   bpci_aggr(x),   irr_fleiss(x),   fleissci_aggr(x),   times = 1000 ) ## Unit: microseconds ##              expr   min     lq     mean median     uq    max neval ##         irr_bp(x) 743.3 772.40 820.4821 789.10 813.75 4290.4  1000 ##      bpci_aggr(x) 353.0 383.15 424.3919 415.55 426.45 3946.7  1000 ##     irr_fleiss(x) 757.6 798.35 861.4403 817.20 842.70 7254.2  1000 ##  fleissci_aggr(x) 349.2 378.75 411.6448 408.90 420.80 3795.8  1000 x <- rbind(x, x, x, x, x, x, x, x, x, x) # x has 3000 elements. microbenchmark::microbenchmark(   irr_bp(x),   bpci_aggr(x),   irr_fleiss(x),   fleissci_aggr(x),   times = 1000 ) ## Unit: microseconds ##              expr    min      lq      mean  median      uq     max neval ##         irr_bp(x) 1081.7 1126.20 1235.1523 1145.70 1195.15  7068.1  1000 ##      bpci_aggr(x)  494.9  520.05  572.0573  548.70  563.20  5069.3  1000 ##     irr_fleiss(x) 1124.8 1171.55 1363.1395 1195.05 1231.80 76225.3  1000 ##  fleissci_aggr(x)  522.7  551.25  608.8986  575.15  589.60  3931.4  1000 x <- cbind(x, x, x, x, x, x, x, x, x, x) # x has 3000 elements and 50 categories. microbenchmark::microbenchmark(   irr_bp(x),   bpci_aggr(x),   irr_fleiss(x),   fleissci_aggr(x),   times = 1000 ) ## Unit: milliseconds ##              expr    min      lq     mean  median      uq     max neval ##         irr_bp(x) 3.8453 4.65960 5.920814 4.77565 7.12095 80.4477  1000 ##      bpci_aggr(x) 1.1643 1.29110 1.453478 1.32080 1.35940  7.0062  1000 ##     irr_fleiss(x) 4.0651 4.78940 5.799846 4.93465 7.07835 79.9973  1000 ##  fleissci_aggr(x) 1.1637 1.31125 1.487462 1.33780 1.38115 10.5684  1000"},{"path":"https://jonasmoss.github.io/quadagree/articles/web_only/consistency.html","id":"code-for-simulate_jsm","dir":"Articles > Web_only","previous_headings":"","what":"Code for simulate_jsm","title":"Consistency with missing ratings","text":"","code":"simulate_jsm <- \\(n,   s,   model = c(     \"general\",     \"cohen-fleiss\",     \"fleiss\",     \"bp\",     \"tu\"   ),   true_dist,   guessing_dist) {   model <- match.arg(model)    if (model == \"cohen-fleiss\") {     if (is.null(nrow(guessing_dist))) {       true_dist <- guessing_dist     } else {       true_dist <- colSums(guessing_dist * (1 - s) / sum(1 - s))     }   } else if (model == \"tu\") {     true_dist <- rep(1, ncol(guessing_dist)) / ncol(guessing_dist)   } else if (model == \"bp\") {     guessing_dist <- rep(1, length(true_dist)) / length(true_dist)   } else if (model == \"fleiss\") {     guessing_dist <- true_dist / sum(abs(true_dist))   }    if (any(true_dist < 0)) {     stop(\"true_dist must contain only positive elements.\")   }    # The true category for each item.   q <- length(true_dist)   x_star <- sample(q, n, replace = TRUE, prob = true_dist)    if (is.null(nrow(guessing_dist))) {     observations <- sapply(seq_along(s), function(j) {       z <- stats::rbinom(n, 1, s[j])       z * x_star + (1 - z) * sample(q, n, replace = TRUE, guessing_dist)     })   } else {     observations <- sapply(seq_along(s), function(j) {       z <- stats::rbinom(n, 1, s[j])       z * x_star + (1 - z) * sample(q, n, replace = TRUE, guessing_dist[j, ])     })   }    attr(observations, \"n\") <- n   attr(observations, \"s\") <- s   attr(observations, \"true_dist\") <- true_dist   attr(observations, \"guessing_dist\") <- guessing_dist   attr(observations, \"kappa\") <- true_jsm(s)   observations }  true_jsm <- \\(s) {   ss <- s %*% t(s)   diag(ss) <- 0   j <- ncol(ss)   sum(ss) / (j * (j - 1)) }"},{"path":"https://jonasmoss.github.io/quadagree/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Jonas Moss. Author, maintainer.","code":""},{"path":"https://jonasmoss.github.io/quadagree/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moss J (2023). quadagree: Inference quadratically weighted Fleiss' kappa, Conger's kappa, Cohen's kappa, Brennan-Prediger coefficient. R package version 0.0.1, https://jonasmoss.github.io/quadagree/.","code":"@Manual{,   title = {quadagree: Inference for the quadratically weighted Fleiss' kappa, Conger's kappa, Cohen's kappa, and Brennan-Prediger coefficient},   author = {Jonas Moss},   year = {2023},   note = {R package version 0.0.1},   url = {https://jonasmoss.github.io/quadagree/}, }"},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"quadagree-","dir":"","previous_headings":"","what":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"R package calculating inference quadratically weighted multi-rater measures agreement. Fleiss’ kappa, Cohen’s kappa (Conger’s kappa), Brennan-Prediger coefficient. support missing values using methods Moss van Oest (work progress) Moss (work progress). package work progress stable API! Expect breaking changes.","code":""},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"package available CRAN yet, use following command inside R:","code":"# install.packages(\"remotes\") remotes::install_github(\"JonasMoss/quadagree\")"},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"Call library function load data Zapf et al. (2016): calculate asymptotically distribution-free confidence interval , can also calculate confidence intervals Conger’s kappa (Cohen’s kappa) Brennan-Prediger coefficient.","code":"library(\"quadagree\") head(dat.zapf2016) #>   Rater A Rater B Rater C Rater D #> 1       5       5       4       5 #> 2       1       1       1       1 #> 3       5       5       5       5 #> 4       1       3       3       3 #> 5       5       5       5       5 #> 6       1       1       1       1 fleissci(dat.zapf2016) #> Call: fleissci(x = dat.zapf2016) #>  #> 95% confidence interval (n = 50). #>     0.025     0.975  #> 0.8429321 0.9538451  #>  #> Sample estimates. #>     kappa        sd  #> 0.8983886 0.1931729 congerci(dat.zapf2016) #> Call: congerci(x = dat.zapf2016) #>  #> 95% confidence interval (n = 50). #>     0.025     0.975  #> 0.8430854 0.9538547  #>  #> Sample estimates. #>     kappa        sd  #> 0.8984700 0.1929226"},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"support-for-missing-values","dir":"","previous_headings":"","what":"Support for missing values","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"inferential methods support missing values, using pairwise available information biased sample covariance matrix. use asymptotic method van Praag (1985). data Klein (2018) contains missing values. estimates returned congerci, quadagree bpci consistent.","code":"head(dat.klein2018) #>   rater1 rater2 rater3 rater4 rater5 #> 1      1      2      2     NA      2 #> 2      1      1      3      3      3 #> 3      3      3      3      3      3 #> 4      1      1      1      1      3 #> 5      1      1      1      3      3 #> 6      1      2      2      2      2 congerci(dat.klein2018) #> Call: congerci(x = dat.klein2018) #>  #> 95% confidence interval (n = 10). #>       0.025       0.975  #> -0.03263703  0.58005580  #>  #> Sample estimates. #>     kappa        sd  #> 0.2737094 0.4062667"},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"supported-inferential-techniques","dir":"","previous_headings":"","what":"Supported inferential techniques","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"quadagree supports three basic asymptotic confidence interval constructions. asymptotically distribution-free interval, pseudo-elliptical interval, normal method. addition, may transform intervals using one four transforms: Fisher transform, . Famously used inference correlation coefficient.  transform, . asymptotic pivot elliptical model parallel items. identity transform. default option.  transform. transform might fail  small, negative values  possible,  accept , option bootstrap studentized bootstrapping Efron, B. (1987) n_reps repetitions. bootstrap = FALSE, ordinary normal approximation used. studentized bootstrap intervals second-order correct, confidence intervals better normal approximation  sufficiently large.","code":""},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"data-on-wide-form","dir":"","previous_headings":"","what":"Data on wide form","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"agreement data recorded wide form instead long form. row contains possible ratings item along total number ratings item. data Fleiss (1971) form Provided raters exchangeable sense ratings conditionally independent given item, consistent inference Fleiss’ kappa Brennan–Prediger coefficient possible using fleiss_aggr bp_aggr. results agree irrCAC.","code":"head(dat.fleiss1971) #>   depression personality disorder schizophrenia neurosis other #> 1          0                    0             0        6     0 #> 2          0                    3             0        0     3 #> 3          0                    1             4        0     1 #> 4          0                    0             0        0     6 #> 5          0                    3             0        3     0 #> 6          2                    0             4        0     0 fleissci_aggr(dat.fleiss1971) #> Call: call #>  #> 95% confidence interval (n = 30). #>      0.025      0.975  #> 0.05668483 0.51145967  #>  #> Sample estimates. #>     kappa        sd  #> 0.2840722 0.5987194 irrCAC::fleiss.kappa.dist(dat.fleiss1971, weights = \"quadratic\") #>      coeff.name     coeff    stderr      conf.int    p.value        pa #> 1 Fleiss' Kappa 0.2840722 0.1111794 (0.057,0.511) 0.01612517 0.8334722 #>          pe #> 1 0.7673958"},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"similar-software","dir":"","previous_headings":"","what":"Similar software","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"several R packages calculate agreement coefficients. feature complete irrCAC, supports calculation inference agreement coefficients weightings quadratic. However, support consistent inference presence missing data, demonstrated consistency vignette.","code":""},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"how-to-contribute-or-get-help","dir":"","previous_headings":"","what":"How to Contribute or Get Help","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"encounter bug, feature request need help, open Github issue. Create pull requests contribute. project follows contributer code conduct.","code":""},{"path":"https://jonasmoss.github.io/quadagree/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Inference for the quadratically weighted Fleiss kappa, Congers kappa, \n    Cohen's kappa, and Brennan-Prediger coefficient","text":"Moss, van Oest (work progress). Inference quadratically weighted multi-rater kappas missing raters. Moss (work progress). Brennan–Prediger coefficients. Cohen, J. (1968). Weighted kappa: Nominal scale agreement provision scaled disagreement partial credit. Psychological Bulletin, 70(4), 213–220. https://doi.org/10.1037/h0026256 Conger, . J. (1980). Integration generalization kappas multiple raters. Psychological Bulletin, 88(2), 322–328. https://doi.org/10.1037/0033-2909.88.2.322 Fleiss, J. L. (1975). Measuring agreement two judges presence absence trait. Biometrics, 31(3), 651–659. https://www.ncbi.nlm.nih.gov/pubmed/1174623 Joanes, D. N., & Gill, C. . (1998). Comparing measures sample skewness kurtosis. Journal Royal Statistical Society: Series D (Statistician), 47(1), 183-189. https://doi.org/10.1111/1467-9884.00122 Lin, L. . (1989). concordance correlation coefficient evaluate reproducibility. Biometrics, 45(1), 255–268. https://www.ncbi.nlm.nih.gov/pubmed/2720055 Joanes, D. N., & Gill, C. . (1998). Comparing measures sample skewness kurtosis. Journal Royal Statistical Society: Series D (Statistician), 47(1), 183-189. https://doi.org/10.1111/1467-9884.00122 Klein, D. (2018). Implementing General Framework Assessing Interrater Agreement Stata. Stata Journal, 18(4), 871–901. https://doi.org/10.1177/1536867X1801800408 Van Praag, B. M. S., Dijkstra, T. K., & Van Velzen, J. (1985). Least-squares theory based general distributional assumptions application incomplete observations problem. Psychometrika, 50(1), 25–36. https://doi.org/10.1007/BF02294145 Zapf, ., Castell, S., Morawietz, L. et al. Measuring inter-rater reliability nominal data – coefficients confidence intervals appropriate?. BMC Med Res Methodol 16, 93 (2016). https://doi.org/10.1186/s12874-016-0200-9","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/bp_get_c1.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the required value of c1. — bp_get_c1","title":"Get the required value of c1. — bp_get_c1","text":"Get required value c1.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/bp_get_c1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the required value of c1. — bp_get_c1","text":"","code":"bp_get_c1(values, kind)"},{"path":"https://jonasmoss.github.io/quadagree/reference/bp_get_c1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the required value of c1. — bp_get_c1","text":"values Vector values. kind kind c1 requested.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/bp_get_c1.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the required value of c1. — bp_get_c1","text":"value c1.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.fleiss1971.html","id":null,"dir":"Reference","previous_headings":"","what":"Agreement study from Fleiss, J. L. (1971) — dat.fleiss1971","title":"Agreement study from Fleiss, J. L. (1971) — dat.fleiss1971","text":"Fleiss, J. L. (1971) best known introducing Fleiss' kappa. Table 1 presents diagnosis data psychiatric patients. data Fleiss form, n = 30 patients diagnosed 6 psychiatrists . case set six psychiatrists diagnosed every patient.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.fleiss1971.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agreement study from Fleiss, J. L. (1971) — dat.fleiss1971","text":"","code":"dat.fleiss1971"},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.fleiss1971.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Agreement study from Fleiss, J. L. (1971) — dat.fleiss1971","text":"tibble contains five columns \"depression\", \"personality disorder\", \"schizophrenia\" \"neurosis\", \"\". content ijth cell number raters diagnosed ith patient mental illness j.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.fleiss1971.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Agreement study from Fleiss, J. L. (1971) — dat.fleiss1971","text":"data scraped hand Fleiss (1971).","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.fleiss1971.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Agreement study from Fleiss, J. L. (1971) — dat.fleiss1971","text":"Fleiss, J. L. (1971). Measuring nominal scale agreement among many raters. Psychological Bulletin, 76(5), 378<U+2013>382. https://doi.org/10.1037/h0031619","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.gwet2014.html","id":null,"dir":"Reference","previous_headings":"","what":"Agreement study from Gwet (2014) — dat.gwet2014","title":"Agreement study from Gwet (2014) — dat.gwet2014","text":"Agreement study (n = 20) Gwet (2014), p. 125. data set contains missing ratings.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.gwet2014.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agreement study from Gwet (2014) — dat.gwet2014","text":"","code":"dat.zapf2016"},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.gwet2014.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Agreement study from Gwet (2014) — dat.gwet2014","text":"n times R matrix. n = 20 row corresponding different items. R = 5 columns contains ratings jth judge.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.gwet2014.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Agreement study from Gwet (2014) — dat.gwet2014","text":"Gwet, K. L. (2014). Handbook Inter-Rater Reliability. Advanced Analytics, LLC.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.klein2018.html","id":null,"dir":"Reference","previous_headings":"","what":"Agreement study from Klein (2018) — dat.klein2018","title":"Agreement study from Klein (2018) — dat.klein2018","text":"Agreement study (n = 10) Klein (2018). data set contains missing ratings.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.klein2018.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agreement study from Klein (2018) — dat.klein2018","text":"","code":"dat.zapf2016"},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.klein2018.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Agreement study from Klein (2018) — dat.klein2018","text":"n times R matrix. n = 20 row corresponding different items. R = 5 columns contains ratings jth judge.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.klein2018.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Agreement study from Klein (2018) — dat.klein2018","text":"Klein, D. (2018). Implementing General Framework Assessing Interrater Agreement Stata. Stata Journal, 18(4), 871-901. https://doi.org/10.1177/1536867X1801800408","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.zapf2016.html","id":null,"dir":"Reference","previous_headings":"","what":"Agreement study from Zapf et. al (2016) — dat.zapf2016","title":"Agreement study from Zapf et. al (2016) — dat.zapf2016","text":"Agreement study (n = 200) Zapf et al. (2016) wide format. 50 items 4 judges, ratings 1 5. case set four judges rated every item, hence data suitable Cohen's kappa.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.zapf2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Agreement study from Zapf et. al (2016) — dat.zapf2016","text":"","code":"dat.zapf2016"},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.zapf2016.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Agreement study from Zapf et. al (2016) — dat.zapf2016","text":"n times R matrix. n = 50 row corresponding different items. R = 4 columns contains ratings jth judge.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.zapf2016.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Agreement study from Zapf et. al (2016) — dat.zapf2016","text":"https://biomedcentral.com/articles/10.1186/s12874-016-0200-9#Sec14","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/dat.zapf2016.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Agreement study from Zapf et. al (2016) — dat.zapf2016","text":"Zapf, ., Castell, S., Morawietz, L. et al. Measuring inter-rater reliability nominal data <U+2013> coefficients confidence intervals appropriate?. BMC Med Res Methodol 16, 93 (2016). https://doi.org/10.1186/s12874-016-0200-9","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/gamma_est.html","id":null,"dir":"Reference","previous_headings":"","what":"Gamma matrix — gamma_est","title":"Gamma matrix — gamma_est","text":"Calculate gamma matrix matrix observations.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/gamma_est.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gamma matrix — gamma_est","text":"","code":"gamma_est(x, sigma, type = \"adf\")"},{"path":"https://jonasmoss.github.io/quadagree/reference/gamma_est.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Gamma matrix — gamma_est","text":"x numeric matrix observations. sigma Covariance matrix data. type One adf, normal elliptical.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/gamma_est.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Gamma matrix — gamma_est","text":"sample estimate gamma matrix.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/get_diag_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the indices of the diagonal for the variances. — get_diag_indices","title":"Get the indices of the diagonal for the variances. — get_diag_indices","text":"Get indices diagonal variances.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/get_diag_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the indices of the diagonal for the variances. — get_diag_indices","text":"","code":"get_diag_indices(r)"},{"path":"https://jonasmoss.github.io/quadagree/reference/get_diag_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the indices of the diagonal for the variances. — get_diag_indices","text":"r Number raters.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/get_diag_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the indices of the diagonal for the variances. — get_diag_indices","text":"vector TRUE variances .","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate unbiased sample kurtosis. — kurtosis","title":"Calculate unbiased sample kurtosis. — kurtosis","text":"Calculate unbiased sample kurtosis.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate unbiased sample kurtosis. — kurtosis","text":"","code":"kurtosis(x)"},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate unbiased sample kurtosis. — kurtosis","text":"x Matrix valus.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate unbiased sample kurtosis. — kurtosis","text":"Unbiased sample kurtosis.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis_correction.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate kurtosis correction — kurtosis_correction","title":"Calculate kurtosis correction — kurtosis_correction","text":"Calculate kurtosis correction","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis_correction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate kurtosis correction — kurtosis_correction","text":"","code":"kurtosis_correction(x, type)"},{"path":"https://jonasmoss.github.io/quadagree/reference/kurtosis_correction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate kurtosis correction — kurtosis_correction","text":"x Matrix values type type correction, either \"normal\" \"elliptical\".","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/limits.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate limits of a confidence interval. — limits","title":"Calculate limits of a confidence interval. — limits","text":"Calculate limits confidence interval.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/limits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate limits of a confidence interval. — limits","text":"","code":"limits(alternative, conf_level)"},{"path":"https://jonasmoss.github.io/quadagree/reference/limits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate limits of a confidence interval. — limits","text":"alternative Alternative choosen. conf_level Confidence level.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/pi_mat_empirical.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the empirical capital pi matrix. — pi_mat_empirical","title":"Calculates the empirical capital pi matrix. — pi_mat_empirical","text":"Calculates empirical capital pi matrix.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/pi_mat_empirical.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the empirical capital pi matrix. — pi_mat_empirical","text":"","code":"pi_mat_empirical(x)"},{"path":"https://jonasmoss.github.io/quadagree/reference/pi_mat_empirical.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the empirical capital pi matrix. — pi_mat_empirical","text":"x Vector probabilities missing.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/pi_mat_empirical.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the empirical capital pi matrix. — pi_mat_empirical","text":"capital pi matrix.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"Confidence intervals quadratic agreement coefficients optional bootstrapping transforms. Based formulas Moss van Oest (wip) Moss (wip) along standard asymptotic theory (Magnus, Neudecker, 2019) missing data theory van Praag et al. (1985).","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"","code":"fleissci(   x,   type = c(\"adf\", \"elliptical\", \"normal\"),   transform = \"none\",   conf_level = 0.95,   alternative = c(\"two.sided\", \"greater\", \"less\"),   bootstrap = FALSE,   n_reps = 1000 )  congerci(   x,   type = c(\"adf\", \"elliptical\", \"normal\"),   transform = \"none\",   conf_level = 0.95,   alternative = c(\"two.sided\", \"greater\", \"less\"),   bootstrap = FALSE,   n_reps = 1000 )  cohenci(   x,   type = c(\"adf\", \"elliptical\", \"normal\"),   transform = \"none\",   conf_level = 0.95,   alternative = c(\"two.sided\", \"greater\", \"less\"),   bootstrap = FALSE,   n_reps = 1000 )  bpci(   x,   values = NULL,   kind = 1,   type = c(\"adf\", \"elliptical\", \"normal\"),   transform = \"none\",   conf_level = 0.95,   alternative = c(\"two.sided\", \"greater\", \"less\"),   bootstrap = FALSE,   n_reps = 1000 )  fleissci_aggr(   x,   values = seq_len(ncol(x)),   transform = \"none\",   conf_level = 0.95,   alternative = c(\"two.sided\", \"greater\", \"less\"),   bootstrap = FALSE,   n_reps = 1000 )  bpci_aggr(   x,   values = seq_len(ncol(x)),   kind = 1,   transform = \"none\",   conf_level = 0.95,   alternative = c(\"two.sided\", \"greater\", \"less\"),   bootstrap = FALSE,   n_reps = 1000 )  fleiss(x)  bp(x, values = stats::na.omit(unique(c(x))), kind = 1)  conger(x)  cohen(x)  fleiss_aggr(x, values = seq_len(ncol(x)))  bp_aggr(x, values = seq_len(ncol(x)), kind = 1)"},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"x Input data data can converted matrix using .matrix. type Type confidence interval. Either adf, elliptical, normal. Ignored fleiss_aggrci. transform One \"none\", \"log\", \"fisher\", \"arcsin. Defaults \"none\". conf_level Confidence level. Defaults 0.95. alternative character string specifying alternative hypothesis, must one \"two.sided\" (default), \"greater\" \"less\". bootstrap TRUE, performs studentized bootstrap n_reps repetitions. Defaults FALSE. n_reps Number bootstrap samples bootstrap = TRUE. Ignored bootstrap = FALSE. Defaults 1000. values attach column Fleiss form data. Defaults 1:C, C number categories. used fleiss_aggr bp_aggr. kind kind Brennan-Prediger coefficient used, 1 classical kind 2 kind introduced Moss (2023). relevant bp_aggr bp.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"vector class quadagree containing confidence end points. arguments function call included attributes.","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"two kinds functions. functions ending aggr applied data aggregated form, row contains number selected ratings category. data set dat.fleiss1971 provides example. Missing data supported aggr functions. functions applied data long form,  row contains ratings every rater. data sets dat.zapf2016 dat.klein2018 examples. Missing data, continuous data, supported. See usage vignette information. data long form, methods handle missing data using pairwise available information, .e., option use = \"pairwise.complete.obs\" stats::cov() along asymptotic theory van Praag et al. (1985). bootstrap option uses studentized bootstrap (Efron, B. 1987), second order correct. functions makes use future.apply bootstrapping. type variables defaults adf, asymptotically distribution-free, consistent fourth moment finite. normal option assumes normality, consistent models excess kurtosis unequal 0. elliptical option assumes elliptical pseudo-elliptical distribution data. resulting confidence intervals corrected variants normal theory intervals kurtosis correction (Yuan & Bentler 2002). common kurtosis parameter calculated using unbiased sample kurtosis (Joanes, 1998). Conger's (1980) kappa multi-rater generalization Cohen's kappa. functions package work multiple raters, functions starting cohen conger aliases. quadratically weighted Cohen's kappa also known Lin's concordance coefficient. difference Cohen's kappa Fleiss' kappa lies measure disagreement due chance. Fleiss' marginalizes rating distribution across raters, essentially assuming difference rating distribution across raters, Cohen's kappa . large literature comparing Fleiss' kappa Cohen's kappa, consensus prefer. aggregated functions takes argument values, specifies numerical value attach category. default value values 1...C, C number categories. Brennan-Prediger coefficients take argument kind. equal 1, returns traditional Brennan-Prediger coefficient. kind equals 2, returns new Brennan-Prediger coefficient Moss (wip).","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"Efron, B. (1987). Better Bootstrap Confidence Intervals. Journal American Statistical Association, 82(397), 171-185. https://doi.org/10.2307/2289144 Van Praag, B. M. S., Dijkstra, T. K., & Van Velzen, J. (1985). Least-squares theory based general distributional assumptions application incomplete observations problem. Psychometrika, 50(1), 25-36. https://doi.org/10.1007/BF02294145 Joanes, D. N., & Gill, C. . (1998). Comparing measures sample skewness kurtosis. Journal Royal Statistical Society: Series D (Statistician), 47(1), 183-189. https://doi.org/10.1111/1467-9884.00122 Cohen, J. (1968). Weighted kappa: Nominal scale agreement provision scaled disagreement partial credit. Psychological Bulletin, 70(4), 213-220. https://doi.org/10.1037/h0026256 Fleiss, J. L. (1975). Measuring agreement two judges presence absence trait. Biometrics, 31(3), 651-659. https://www.ncbi.nlm.nih.gov/pubmed/1174623 Conger, . J. (1980). Integration generalization kappas multiple raters. Psychological Bulletin, 88(2), 322-328. https://doi.org/10.1037/0033-2909.88.2.322 Lin, L. . (1989). concordance correlation coefficient evaluate reproducibility. Biometrics, 45(1), 255-268. https://www.ncbi.nlm.nih.gov/pubmed/2720055 Moss, van Oest (work progress). Inference quadratically weighted multi-rater kappas missing raters. Moss (work progress). Brennan-Prediger coefficients. Magnus, J. R., & Neudecker, H. (2019). Matrix Differential Calculus Applications Statistics Econometrics. John Wiley & Sons. https://doi.org/10.1002/9781119541219","code":""},{"path":"https://jonasmoss.github.io/quadagree/reference/quadagree.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimation and inference for the quadratically weighted Fleiss' kappa and\nConger's (Cohen's) kappa — quadagree","text":"","code":"library(\"quadagree\") # Fleiss' kappa for data on long form fleissci(dat.zapf2016) #> Call: fleissci(x = dat.zapf2016) #>  #> 95% confidence interval (n = 50). #>     0.025     0.975  #> 0.8418042 0.9549730  #>  #> Sample estimates. #>     kappa        sd  #> 0.8983886 0.1971016   # Brennan-Prediger for data on aggregated form bpci_aggr(dat.fleiss1971) #> Call: bpci_aggr(x = dat.fleiss1971) #>  #> 95% confidence interval (n = 30). #>     0.025     0.975  #> 0.1219674 0.5458104  #>  #> Sample estimates. #>     kappa        sd  #> 0.3338889 0.5579971   # Conger's (Cohen's) kappa for data on long form with missing values congerci(dat.klein2018) #> Call: congerci(x = dat.klein2018) #>  #> 95% confidence interval (n = 10). #>       0.025       0.975  #> -0.05610579  0.60352456  #>  #> Sample estimates. #>     kappa        sd  #> 0.2737094 0.4373903"}]
